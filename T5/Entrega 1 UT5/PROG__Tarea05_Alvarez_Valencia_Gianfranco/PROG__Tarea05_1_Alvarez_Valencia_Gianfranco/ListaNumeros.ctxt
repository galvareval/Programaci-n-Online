#BlueJ class context
comment0.target=ListaNumeros
comment0.text=\r\n\ Esta\ clase\ maneja\ un\ alista\ de\ n\u00FAmeros\r\n\ \r\n\ @author\ (Gianfranco\ \u00C1lvarez\ Valencia)\ \r\n\ @version\ (01_11_01_2021)\r\n
comment1.params=addLista
comment1.target=ListaNumeros(int[])
comment1.text=\r\n\ Constructor\ de\ objetos\ sobrecargado\ de\ la\ clase\ ListaNumeros.\r\n\ \r\n\ @param\ lista\ Array\ pasado\ como\ par\u00E1metro.\r\n
comment10.params=posicionAborrar
comment10.target=void\ borrarUno(int)
comment10.text=\r\n\ M\u00E9todo\ que\ borra\ el\ valor\ de\ un\ aray\ en\ la\ posici\u00F3n\ pasada\ como\ par\u00E1metro.\r\n\ \r\n\ @param\ posicionAborrar\ Posici\u00F3n\ del\ valor\ que\ se\ quiere\ borrar.\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\r\n\ M\u00E9todo\ que\ devuelve\ una\ cadena\ con\ la\ representaci\u00F3n\ de\ la\ lista.\r\n\ \r\n\ @return\ Devuelve\ la\ representaci\u00F3n\ de\ la\ lista.\r\n
comment12.params=
comment12.target=void\ escribirLista()
comment12.text=\r\n\ M\u00E9todo\ que\ muestra\ en\ pantalla\ la\ lista.\r\n\ \r\n
comment13.params=
comment13.target=int[]\ copiar()
comment13.text=\r\n\ M\u00E9todo\ que\ devuelve\ una\ copia\ de\ la\ lista(posiciones\ ocupadas)\r\n
comment14.params=from\ to
comment14.target=java.lang.String\ copiarRango(int,\ int)
comment14.text=\r\n\ M\u00E9todo\ que\ devuelve\ una\ cadena\ con\ los\ valores\ comprendidos\ en\ el\ rango\ \r\n\ pasado\ por\ par\u00E1metro(inicio,\ fin)\ sin\ incluir\ el\ final.\r\n\ \r\n\ @param\ from\ Par\u00E1metro\ que\ indica\ desde\ que\ posici\u00F3n\ se\ empieza\ a\ copiar\ la\ lista.\r\n\ @param\ to\ Par\u00E1metro\ que\ indica\ hasta\ donde\ hay\ que\ copiar\ la\ lista.\r\n
comment15.params=pos
comment15.target=boolean\ indiceCorrecto(int)
comment15.text=\r\n\ M\u00E9todo\ que\ comprueba\ si\ un\ valor\ pasado\ es\ mayor\ que\ 0.\r\n\ \r\n\ @param\ pos\ Par\u00E1metro\ para\ pasar\ el\ valor\ a\ evaluar.\r\n\ @return\ Devuelve\ booleano\ con\ el\ resultado\ de\ la\ evaluaci\u00F3n.\r\n
comment2.params=dimension
comment2.target=ListaNumeros(int)
comment2.text=\r\n\ Constructor\ de\ objetos\ sobrecargado\ de\ la\ clase\ ListaNumeros.\r\n\ \r\n\ @param\ lista\ Array\ pasado\ como\ par\u00E1metro.\r\n
comment3.params=valor
comment3.target=void\ a\u00F1adirElemento(int)
comment3.text=\r\n\ M\u00E9todo\ que\ a\u00F1ade\ el\ valor\ recibido\ como\ par\u00E1metro\ al\ final\ de\ la\ lista.\r\n\ Si\ esta\ no\ est\u00E1\ completa.\r\n\ \r\n\ @param\ \ valor\ \ \ Valor\ a\ a\u00F1adir\ al\ final\ de\ la\ lista.\r\n
comment4.params=
comment4.target=int\ getTotalNumeros()
comment4.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ n\u00FAmero\ total\ de\ elementos\ guardados\ en\ el\ array.\r\n\ \r\n\ @return\ N\u00FAmero\ total\ de\ elementos\ del\ array.\r\n
comment5.params=
comment5.target=void\ sumarPosicion()
comment5.text=\r\n\ M\u00E9todo\ que\ suma\ a\ cada\ elemento\ del\ Array\ el\ valor\ de\ su\ posici\u00F3n.\r\n\ \r\n
comment6.params=
comment6.target=int\ obtenerMinimo()
comment6.text=\r\n\ M\u00E9todo\ que\ devuelve\ el\ valor\ m\u00EDnimo\ de\ la\ lista\r\n\ \r\n\ @return\ Devuelve\ el\ valor\ m\u00EDmo\ de\ la\ lista\r\n
comment7.params=
comment7.target=int\ cuantosMinimos()
comment7.text=\r\n\ M\u00E9todo\ que\ devuelve\ cu\u00E1ntos\ valores\ hay\ en\ lista\ que\ coincidan\ con\ el\ m\u00EDnimo.\r\n\ \r\n\ @return\ Devuelve\ el\ total\ de\ valores\ que\ coinciden\ con\ el\ m\u00EDnimo.\r\n
comment8.params=
comment8.target=int[]\ generarArrayMinimos()
comment8.text=\r\n\ M\u00E9todo\ que\ devuelve\ un\ array\ con\ los\ valores\ m\u00EDnimos\ de\ la\ lista\r\n\ \r\n\ @return\ Devuelve\ un\ array\ con\ los\ valores\ minimos\ de\ la\ lista.\r\n
comment9.params=valorMultiplo
comment9.target=void\ borrarMultiplosDe(int)
comment9.text=\r\n\ M\u00E9todo\ que\ borra\ del\ array\ lista\ los\ valores\ que\ sean\ m\u00FAltiplos\ del\ par\u00E1metro.\r\n\ \r\n\ @param\ valorMultiplo\ Se\ eliminar\u00E1n\ del\ array\ los\ multiplos\ de\ este\ n\u00FAmero.\r\n
numComments=16
